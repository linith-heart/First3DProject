//=============================================================================
//
// スコアの処理 [score.h]
// Author : 
//
//=============================================================================
#ifndef _SCORE_H_
#define _SCORE_H_

#include "main.h"



//*****************************************************************************
// マクロ定義
//*****************************************************************************

enum
{
	SCORE_CUR = 0,	// 現在の数
	SCORE_SLASH,	// 現在とステージマックスを分けるスラッシュ
	SCORE_SET,		// ステージ上のマックス
	SCORE_MAX,		// スコア表示に必要な数
};


#define	NUM_SCORE		(2)				// ポリゴン数


//*****************************************************************************
// 構造体宣言
//*****************************************************************************

typedef struct	// プレイヤー構造体
{
	bool			use;		// true:使用  false:未使用
	D3DXVECTOR3		Rot;		// ポリゴンの回転量
	D3DXVECTOR2		Pos;		// ポリゴンの移動量
	D3DXVECTOR2		Size;		// 大きさ

	int				Val;
	int				TexId;		// テクスチャー番号


	VERTEX_2D		vertexWk[NUM_VERTEX];		// 頂点情報格納ワーク

} SCORE;


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitScore(void);
void UninitScore(void);
void UpdateScore(void);
void DrawScore(void);
void SetScore(D3DXVECTOR3 pos);
SCORE *GetScore(int no);


#endif
